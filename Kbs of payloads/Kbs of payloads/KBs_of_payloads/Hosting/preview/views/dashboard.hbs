<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notes Dashboard</title>
    <link rel="stylesheet" href="/css/styles.css"> <!-- External CSS file -->
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(to right, #1a1a40, #2a2a72);
            color: white;
        }

        header {
            background: rgba(255, 255, 255, 0.1);
            color: white;
            padding: 15px 20px;
            text-align: center;
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        main {
            max-width: 800px;
            margin: 20px auto;
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 12px;
            backdrop-filter: blur(15px);
            box-shadow: 0 4px 20px rgba(0, 255, 127, 0.2);
        }

        section {
            margin-bottom: 20px;
        }

        h2 {
            color: #0ff0fc;
            text-align: center;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            border-radius: 8px;
            overflow: hidden;
        }

        th, td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        th {
            background: rgba(0, 255, 127, 0.2);
        }

        form {
            display: flex;
            flex-direction: column;
        }

        label {
            margin-bottom: 5px;
        }

        input[type="text"], textarea {
            padding: 10px;
            margin-bottom: 10px;
            border: none;
            border-radius: 6px;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            outline: none;
            transition: 0.3s;
            text-align: center;
            font-size: 1rem;
        }

        input:focus, textarea:focus {
            background: rgba(0, 255, 127, 0.2);
            box-shadow: 0 0 10px rgba(0, 255, 127, 0.5);
            border: 1px solid rgba(0, 255, 127, 0.8);
        }

        input::placeholder, textarea::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        button {
            padding: 10px;
            background: linear-gradient(90deg, #0ff0fc, #0ef);
            color: black;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: 0.3s;
            font-size: 1rem;
            font-weight: bold;
            text-transform: uppercase;
        }

        button:hover {
            background: linear-gradient(90deg, #0ef, #00ff7f);
            box-shadow: 0 0 15px rgba(0, 255, 127, 0.8);
        }

        #noteMessage {
            margin-top: 10px;
            font-weight: bold;
            text-align: center;
        }

        .delete-btn {
            background: #dc3545;
        }

        .delete-btn:hover {
            background: #c82333;
        }
    </style>
</head>
<body>
    <header>
        <h1>Welcome, {{user.name}}</h1>
        <nav>
            <a href="/logout" style="color: white; text-decoration: none;">Logout</a>
        </nav>
    </header>
    
    <main>
        <section>
            <h2>Add New Note</h2>
            <form id="addNoteForm">
                <label for="title">Title:</label>
                <input type="text" id="title" name="title" required>
                <label for="content">Content:</label>
                <textarea id="content" name="content" rows="4" required></textarea>
                <button type="submit">Add Note</button>
            </form>
            <div id="noteMessage"></div>
        </section>

        <section>
            <h2>Your Notes</h2>
            <table>
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Created At</th>
                        <th>Updated At</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="notesTableBody">
                    {{#if notes.length}}
                        {{#each notes}}
                        <tr>
                            <td>{{this.title}}</td>
                            <td>{{this.created_at}}</td>
                            <td>{{this.updated_at}}</td>
                            <td>
                                <button class="delete-btn" data-id="{{this.id}}">Delete</button>
                            </td>
                        </tr>
                        {{/each}}
                    {{else}}
                    <tr>
                        <td colspan="4">No notes yet</td>
                    </tr>
                    {{/if}}
                </tbody>
            </table>
        </section>
    </main>

<script>
    document.getElementById('addNoteForm').addEventListener('submit', async (event) => {
        event.preventDefault();
        const formData = new URLSearchParams(new FormData(event.target)).toString();

        const response = await fetch('/notes', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: formData,
        });

        const messageDiv = document.getElementById('noteMessage');
        if (response.ok) {
            messageDiv.textContent = 'Note added successfully!';
            messageDiv.style.color = 'green';
            event.target.reset();
            setTimeout(() => {
                location.reload();
            }, 2000);
        } else {
            messageDiv.textContent = 'Failed to add note';
            messageDiv.style.color = 'red';
        }
    });

    document.getElementById('notesTableBody').addEventListener('click', async (event) => {
        if (event.target.classList.contains('delete-btn')) {
            const noteId = event.target.dataset.id;
            const response = await fetch(`/notes/${noteId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
            });

            if (response.ok) {
                event.target.closest('tr').remove();
                if (document.getElementById('notesTableBody').children.length === 0) {
                    document.getElementById('notesTableBody').innerHTML = '<tr><td colspan="4">No notes yet</td></tr>';
                }
            } else {
                alert('Failed to delete note');
            }
        }
    });
</script>

</body>
</html>
